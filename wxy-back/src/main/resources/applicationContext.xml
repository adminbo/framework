<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	                    http://www.springframework.org/schema/tx 
	                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	                    http://www.springframework.org/schema/jee 
	                    http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	                    http://www.springframework.org/schema/context 
	                    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	                    default-lazy-init="true">

	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="com.zjkj.wxy.core"/>
	
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.zjkj.wxy.core"
		use-default-filters="false">
	<!-- 不再扫描springmvc的controller注解 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />	
	</context:component-scan>
	
	<!-- 支持spring注解(引入spring提供的注解解析器) -->
	<context:annotation-config/>	
	<!-- 支持事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>
	
	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 配置数据源属性 -->
		<property name="dataSource" ref="dataSource"></property>
  		
		<!-- 配置Hibernate 的常用属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库的方言 -->
				<!-- MySql方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				
				<!-- Oracle方言 -->
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory</prop>
       			<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
       			<prop key="hibernate.cache.use_second_level_cache">true</prop>
        		<prop key="hibernate.cache.use_query_cache">true</prop>
        		<prop key="hibernate.cache.use_structured_entries">true</prop>
        		<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop>
			</props>
		</property>
		<!-- 注入hbm映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/zjkj/wxy/**/domain</value>
			</list>
		</property>
	</bean>

	<!-- 配置Hibernate 的事物管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
		<!-- shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		 <!-- shiro 的核心安全接口 -->
		 <property name="securityManager" ref="securityManager" />
		 <!-- 要求登录时的链接 -->
		 <property name="loginUrl" value="/login.jsp" />
		 <!-- 登陆成功后要跳转的连接 -->
<!-- <property name="successUrl" value="/WEB-INF/wechatConfig/wctConfig.jsp" /> -->
		 <!-- 未授权时要跳转的连接 -->
		 <property name="unauthorizedUrl" value="/unauthorized.jsp" />
		 <!-- shiro 连接约束配置 -->
		 <property name="filterChainDefinitions">
			 <value>
			 <!-- 资源及部分请求不需要登录认证 -->
			 /css/**=anon
			 /js/**=anon
			 /images/**=anon
			 /validatecode.jsp*=anon
			 /login.jsp*=anon
			 /index.jsp*=anon
			 /user/login.do* = anon
			 /user/toLogin.do* = anon
			 /user/toBackPwd.do* = anon
			 /user/sendMail.do* = anon
			 /pwd/toEdit.do* = anon
			 /pwd/upPwd.do* = anon

			 /** = authc
			 </value>
		 </property>
	</bean>
		<!-- shiro核心安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="wxyRealm"></property>
		<!-- 注入缓存管理器 -->
	<property name="cacheManager" ref="cacheManager"></property>
	</bean> 
	  		<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	<!-- 自定义密码认证 -->
	<bean id="credentialsMatcher" class="com.zjkj.wxy.core.realm.CustomCredentialsMatcher">
       <constructor-arg ref="cacheManager"></constructor-arg>   
     </bean>
		 <!-- realm -->
	<bean id = "wxyRealm" class="com.zjkj.wxy.core.realm.WxyRealm" init-method="initCredentialsMatcher" />
	
	
	    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> 	
		<!-- 自动代理 -->
	 <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
		<!-- 切面 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean> 
    <!-- 需要配置MultipartResolver处理器 -->
     <bean id="multipartResolver"
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="defaultEncoding" value="UTF-8" />
         <!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
         <property name="maxUploadSize" value="10240000" />
    </bean>
</beans>
